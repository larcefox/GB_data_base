/* Задача 8

Практическое задание по теме “Транзакции, переменные, представления”

1. В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных.
   Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.
2. Создайте представление, которое выводит название name товарной позиции из таблицы products
   и соответствующее название каталога name из таблицы catalogs.
3. (по желанию) Пусть имеется таблица с календарным полем created_at.
   В ней размещены разряженые календарные записи за август 2018 года '2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. 
   Составьте запрос, который выводит полный список дат за август, выставляя в соседнем поле значение 1,
   если дата присутствует в исходном таблице и 0, если она отсутствует.
4. (по желанию) Пусть имеется любая таблица с календарным полем created_at.
   Создайте запрос, который удаляет устаревшие записи из таблицы, оставляя только 5 самых свежих записей.

Практическое задание по теме “Администрирование MySQL” (эта тема изучается по вашему желанию)

1. Создайте двух пользователей которые имеют доступ к базе данных shop.
   Первому пользователю shop_read должны быть доступны только запросы на чтение данных,
    второму пользователю shop — любые операции в пределах базы данных shop.
2. (по желанию) Пусть имеется таблица accounts содержащая три столбца id, name, password,
   содержащие первичный ключ, имя пользователя и его пароль.
   Создайте представление username таблицы accounts, предоставляющий доступ к столбца id и name.
   Создайте пользователя user_read, который бы не имел доступа к таблице accounts, однако, мог бы извлекать записи из представления username.

Практическое задание по теме “Хранимые процедуры и функции, триггеры"

1. Создайте хранимую функцию hello(), которая будет возвращать приветствие,
   в зависимости от текущего времени суток. С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро",
   с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".
2. В таблице products есть два текстовых поля: name с названием товара и description с его описанием.
   Допустимо присутствие обоих полей или одно из них.
   Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема.
   Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены.
   При попытке присвоить полям NULL-значение необходимо отменить операцию.
3. (по желанию) Напишите хранимую функцию для вычисления произвольного числа Фибоначчи.
   Числами Фибоначчи называется последовательность в которой число равно сумме двух предыдущих чисел.
    Вызов функции FIBONACCI(10) должен возвращать число 55.





*/


-- создание таблиц

-- наполнение нужными данными
-- скрипт самого задания


-- Практическое задание по теме “Транзакции, переменные, представления”
  --  1. В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных.
  --     Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.

TRUNCATE sample.users;

START TRANSACTION;
USE shop;
USE sample;
INSERT INTO sample.users(name, birthday_at, created_at, updated_at) SELECT name, birthday_at, created_at, updated_at FROM shop.users WHERE shop.users.id = 1;
COMMIT;

  -- 2. Создайте представление, которое выводит название name товарной позиции из таблицы products
  --    и соответствующее название каталога name из таблицы catalogs.
  
CREATE OR REPLACE
VIEW `sample`.`v_name` AS
select
    `sample`.`products`.`name` AS `product_name`,
    `sample`.`catalogs`.`name` AS `catalog_anme`
from
    (`sample`.`products`
join `sample`.`catalogs` on
    ((`sample`.`products`.`catalog_id` = `sample`.`catalogs`.`id`)))


SELECT product_name, catalog_anme
FROM sample.v_name;


-- Практическое задание по теме “Хранимые процедуры и функции, триггеры"

  -- 1. Создайте хранимую функцию hello(), которая будет возвращать приветствие,
     -- в зависимости от текущего времени суток. С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро",
     -- с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".

SELECT NOW();


DROP PROCEDURE IF EXISTS sample.cp_hello;

DELIMITER //
//
CREATE DEFINER=`root`@`%` PROCEDURE `sample`.`cp_hello`()
BEGIN
	IF HOUR(NOW()) > 6 and HOUR(NOW()) < 13 THEN
		SELECT "Доброе утро";
	ELSEIF HOUR(NOW()) > 12 and HOUR(NOW()) < 19 THEN
		SELECT "Добрый день";
	ELSEIF HOUR(NOW()) > 18 THEN
		SELECT "Добрый вечер";
	ELSEIF HOUR(NOW()) < 6 THEN
		SELECT "Доброй ночи";
	END IF;

END//
DELIMITER ;

CALL sample.cp_hello()




  
  -- 2. В таблице products есть два текстовых поля: name с названием товара и description с его описанием.
     -- Допустимо присутствие обоих полей или одно из них.
     -- Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема.
     -- Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены.
     -- При попытке присвоить полям NULL-значение необходимо отменить операцию.

DROP TRIGGER IF EXISTS sample.t_check_name_before_insert;

DELIMITER //

CREATE TRIGGER `t_check_name_before_insert` BEFORE INSERT ON sample.products FOR EACH ROW BEGIN
	IF (NEW.name IS NULL) and (NEW.description IS NULL) THEN
		SIGNAL SQLSTATE '45000' SET message_text = 'Could not insert empty name and description';
	END IF;
END//
DELIMITER ;


INSERT INTO sample.products
  (name, description)
VALUES
	(NULL, NULL);

SELECT *
	FROM sample.products
;



